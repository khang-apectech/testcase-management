// Script ƒë·ªÉ t·∫£i xu·ªëng k·∫øt qu·∫£ test APEC SPACE
// Ch·∫°y v·ªõi: node scripts/download-apec-space.js

const fs = require('fs');
const path = require('path');
const https = require('https');
const http = require('http');
const { neon } = require('@neondatabase/serverless');
require('dotenv').config();

async function downloadApecSpaceResults() {
  try {
    console.log('üîç K·∫øt n·ªëi ƒë·∫øn c∆° s·ªü d·ªØ li·ªáu...');
    
    if (!process.env.DATABASE_URL) {
      throw new Error('DATABASE_URL kh√¥ng t√¨m th·∫•y trong bi·∫øn m√¥i tr∆∞·ªùng');
    }

    const sql = neon(process.env.DATABASE_URL);
    
    // T√¨m d·ª± √°n APEC SPACE
    console.log('üîç T√¨m d·ª± √°n APEC SPACE...');
    const projectResult = await sql`
      SELECT id, name FROM projects WHERE name LIKE ${'%Apec Space%'} OR name LIKE ${'%APEC SPACE%'} OR name LIKE ${'%APEC-SPACE%'} LIMIT 1
    `;
    
    if (projectResult.length === 0) {
      throw new Error('Kh√¥ng t√¨m th·∫•y d·ª± √°n APEC SPACE');
    }
    
    const projectId = projectResult[0].id;
    const projectName = projectResult[0].name;
    console.log(`‚úÖ ƒê√£ t√¨m th·∫•y d·ª± √°n: ${projectName} (${projectId})`);
    
    // L·∫•y t·∫•t c·∫£ test case v√† k·∫øt qu·∫£ th·ª±c thi cho d·ª± √°n APEC SPACE
    console.log('üîç ƒêang l·∫•y d·ªØ li·ªáu test case v√† k·∫øt qu·∫£ th·ª±c thi...');
    const testResults = await sql`
      SELECT 
        tc.id as test_case_id,
        tc.hang_muc,
        tc.tinh_nang,
        tc.mo_ta,
        tc.so_lan_phai_test,
        tc.priority,
        tc.platform,
        tc.preconditions,
        tc.steps,
        tc.expected_result,
        te.id as execution_id,
        te.so_lan_da_test,
        te.cam_nhan,
        te.loi,
        te.execution_date,
        u.name as tester_name,
        u.email as tester_email
      FROM test_cases tc
      LEFT JOIN test_executions te ON te.test_case_id = tc.id
      LEFT JOIN users u ON te.tester_id = u.id
      WHERE tc.project_id = ${projectId}
      ORDER BY tc.hang_muc, tc.tinh_nang, te.execution_date DESC
    `;
    
    if (testResults.length === 0) {
      throw new Error('Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ test cho d·ª± √°n APEC SPACE');
    }
    
    console.log(`‚úÖ ƒê√£ t√¨m th·∫•y ${testResults.length} k·∫øt qu·∫£ test`);
    
    // T·∫°o n·ªôi dung CSV
    console.log('üìù ƒêang t·∫°o file CSV...');
    const headers = [
      "ID",
      "H·∫°ng m·ª•c",
      "T√≠nh nƒÉng",
      "M√¥ t·∫£",
      "S·ªë l·∫ßn ph·∫£i test",
      "ƒê·ªô ∆∞u ti√™n",
      "N·ªÅn t·∫£ng",
      "ƒêi·ªÅu ki·ªán ti√™n quy·∫øt",
      "C√°c b∆∞·ªõc th·ª±c hi·ªán",
      "K·∫øt qu·∫£ mong ƒë·ª£i",
      "S·ªë l·∫ßn ƒë√£ test",
      "C·∫£m nh·∫≠n",
      "L·ªói",
      "Ng√†y test",
      "Ng∆∞·ªùi test",
      "Email ng∆∞·ªùi test"
    ];
    
    // Th√™m BOM cho UTF-8
    let csvContent = "\uFEFF" + headers.join(",") + "\n";
    
    testResults.forEach(result => {
      const row = [
        `"${result.test_case_id || ""}"`,
        `"${(result.hang_muc || "").replace(/"/g, '""')}"`,
        `"${(result.tinh_nang || "").replace(/"/g, '""')}"`,
        `"${(result.mo_ta || "").replace(/"/g, '""')}"`,
        `"${result.so_lan_phai_test || ""}"`,
        `"${result.priority || ""}"`,
        `"${result.platform || ""}"`,
        `"${(result.preconditions || "").replace(/"/g, '""')}"`,
        `"${(result.steps || "").replace(/"/g, '""')}"`,
        `"${(result.expected_result || "").replace(/"/g, '""')}"`,
        `"${result.so_lan_da_test || ""}"`,
        `"${(result.cam_nhan || "").replace(/"/g, '""')}"`,
        `"${(result.loi || "").replace(/"/g, '""')}"`,
        `"${result.execution_date ? new Date(result.execution_date).toLocaleDateString('vi-VN') : ""}"`,
        `"${(result.tester_name || "").replace(/"/g, '""')}"`,
        `"${(result.tester_email || "").replace(/"/g, '""')}"`,
      ];
      
      csvContent += row.join(",") + "\n";
    });
    
    // L∆∞u file CSV
    const fileName = `APEC-SPACE-test-results-${new Date().toISOString().split('T')[0]}.csv`;
    const filePath = path.join(__dirname, '..', fileName);
    fs.writeFileSync(filePath, csvContent);
    
    console.log(`‚úÖ ƒê√£ l∆∞u file CSV t·∫°i: ${filePath}`);
    
  } catch (error) {
    console.error('‚ùå L·ªói:', error);
  }
}

downloadApecSpaceResults();