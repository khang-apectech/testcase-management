// Script ƒë·ªÉ li·ªát k√™ c√°c d·ª± √°n
// Ch·∫°y v·ªõi: node scripts/list-projects.js

const { neon } = require('@neondatabase/serverless');
require('dotenv').config();

async function listProjects() {
  try {
    console.log('üîç K·∫øt n·ªëi ƒë·∫øn c∆° s·ªü d·ªØ li·ªáu...');
    
    if (!process.env.DATABASE_URL) {
      throw new Error('DATABASE_URL kh√¥ng t√¨m th·∫•y trong bi·∫øn m√¥i tr∆∞·ªùng');
    }

    const sql = neon(process.env.DATABASE_URL);
    
    // L·∫•y danh s√°ch d·ª± √°n
    console.log('üîç ƒêang l·∫•y danh s√°ch d·ª± √°n...');
    const projects = await sql`
      SELECT id, name, description, created_at FROM projects ORDER BY created_at DESC
    `;
    
    if (projects.length === 0) {
      console.log('‚ùå Kh√¥ng c√≥ d·ª± √°n n√†o trong c∆° s·ªü d·ªØ li·ªáu');
      return;
    }
    
    console.log(`‚úÖ ƒê√£ t√¨m th·∫•y ${projects.length} d·ª± √°n:`);
    projects.forEach((project, index) => {
      console.log(`${index + 1}. ${project.name} (${project.id})`);
      console.log(`   M√¥ t·∫£: ${project.description || 'Kh√¥ng c√≥ m√¥ t·∫£'}`);
      console.log(`   Ng√†y t·∫°o: ${new Date(project.created_at).toLocaleString()}`);
      console.log('---');
    });
    
  } catch (error) {
    console.error('‚ùå L·ªói:', error);
  }
}

listProjects();